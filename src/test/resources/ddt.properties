! Default Properties for the DDT Automation project - this is the place to override those.
! %proj% will be replaced by the value of project folder which is derived from %user.dir%

!DDT Version will be used if the Maven-Centric ...\target\maven-archives\pom.properties does not exist or fails to load
! %proj% will be replaced with the project's path (where the pom.xml is)
DDTVersion = 1.3.1
ResourcesFolder = %proj%src\\test\\Resources
ImagesFolder = %proj%Images
ReportsFolder = %proj%Reports
DataFolder = %proj%Data
ScriptsFolder = %proj%Scripts
ClassLoadFolder = %proj%target\\test-classes
XslFileName = Automation.Xsl
ItemDelim = ;
AndDelim = .and.
OrDelim = .or.
ValidDelims = ;~|!@#$%^&*()_+
! A delimited string indicating the type of input used (at present File and Inline are the two options) followed by one or two other values
! Example 1: File!DDTRoot.xls!Root
! Example 2: Inline!InputGeneratorClassName!rootMethodName
!InputSpecs = Inline!CrownSampleInlineProvider!root
!InputSpecs = File!CrownRoot.xlsx!Root
InputSpecs = File!DDTRoot.xlsx!Root
!InputSpecs = File!DDTRoot.xml
!InputSpecs = File!Root.html
!InputSpecs = File!Demo.xlsx!Root
!InputSpecs = File!Testomato.xlsx!Root
!InputSpecs = File!Demo.txt
!InputSpecs = File!test.json
! Specifies the standalone IE Driver file name to invoke when IE is the browser
IEDriverFileName = %proj%src\\test\\Resources\\IEDriverServer.exe
! Specifies the environment property key for BrowserName of IE
IEPropertyKey = webdriver.ie.driver
! Specifies the Edge Driver file name to invoke when EDGE is the browser
EdgeDriverFileName = %proj%src\\test\\Resources\\MicrosoftWebDriver.exe
! Specifies the environment property key for BrowserName of EDGE
EdgePropertyKey = webdriver.edge.driver
! Specifies the standalone Chrome Driver file name to invoke when CHROME is the web driver
ChromeDriverFileName = %proj%src\\test\\Resources\\ChromeDriver.exe
! Specifies the environment properties key for Chrome
ChromePropertyKey = webdriver.chrome.driver
! possible values: FIREFOX, IE, EDGE, CHROME, OPERA, HEADLESS, HTMLUNIT
BrowserName = CHROME
!For use by the HEADLESS driver (or other drivers) - List of settable capabilities
DesiredCapabilityNames =  takesScreenshot,javascriptEnabled,databaseEnabled,locationContextEnabled,applicationCacheEnabled,webStorageEnabled,acceptSslCerts,rotatable,nativeEvents,proxy,unexpectedAlertBehaviour,elementScrollBehavior
DesiredCapabilityValues = true,true,false,true,true,false,false,false,true,false,dismiss,0
! in seconds - used by the 'find engine' as default and (optionally) modified as needed on the fly in test items dealing with ajax pages or pages slow to load.
WaitTime = 15
! in millis - the interval of polling for existence of elements on a page.
WaitInterval = 100
! Adjust the timezone of the test machine to that of the application's / server
TimeZoneAdjustment = 5
! For reporting purposes
ProjectName = Selenium Based DDT Automation
! The email provider is gmail - these values were working initially - change user name, password and recipients to cater to your needs
EmailSender = beymelamed01@optimum.net
EmailAuthenticationRequired = true
! If email Password is encrypted the format is Base64 logic
EmailPasswordEncrypted = true
! Encrypted or UnEncrypted password for the sender (QW5pMDEwMjAz)
EmailPassword = QW5pMDEwMjAz
! Comma delimited list of results email recipients
EmailRecipients = beymelamed01@optimum.net,beymelamed@gmail.com
EmailHost = mail.optimum.net
EmailPort = 587
! An optional text - to be used for the top of the report as well as the email message
ReportTextMessage = ********************* *crlf*Dear Recruiter / Manager / Technician,*crlf*You are in receipt of this email message because, as a QA Automation professional, I believe this is a better way to communicate my potential contribution to your company / organization.*crlf*This is a sample test session report for a 'Data-Driven Test Automation' project I created as the owner of DynaBytes Inc.*crlf*The project can be downloaded from Git Hub (https://github.com/BeyMelamed?tab=repositories).*crlf*The (attached) DDTRoot.xlsx file is the actual input file that defines the test session reported in this email message.*crlf*For a test run like this, no code / scripting is needed - only test step definitions like those in the worksheets of the attached spreadsheet.*crlf*The (attached) 'ddttestresults...' (html) file is the report of this test session (drag it to your desktop then double click it to view it in a browser.)*crlf**crlf*Feel free to forward this message to interested parties (also, thanks for your feedback - if you have any.)*crlf**crlf*Avraham Melamed (Bey)*crlf*Founder,*crlf*DynaBytes Inc.*crlf*Email: BeyMelamed01@optimum.net*crlf*Phone: (917)656-6516*crlf***********************crlf**crlf*
! The text in the EmailMsgFile overrides the ReportTextMessage string (the body of the email message).
! The file assumes to be in the Resources folder of the project
EmailMsgFile = EmailMessage.txt
! An optional (comma delimited) list of attachment files - must be valid file name (kiss) and accessible from the project... %res% means the resources folder, %data% means the data folder the example shows attaching the DDTRoot.xlsx from the data folder to the email message of the results
Attachments = %data%DDTRoot.xlsx,%data%ResumeAvrahamMelamed.pdf
! Is this installation running locally
IsLocal = true
! "Always" = Take Image on each UI verb, "Never" = Do not take image (except during TakeScreenShot verb), "OnFail" = Only on failed UI Verbs (and TakeScreenShot).
TakeImagePolicy = OnFail
! When searching for cells through table - should each individual cell be reported?  If true - report results may be huge in large tables - use true mostly for debugging purposes.
ReportEachTableCell = false
! Report Verbosity Support
! A list of status values to include in report - only items whose status is one of those listed below are included in the report.
! The entire list (for now) is: PASS,FAIL,SKIP
StatusToReport = PASS,FAIL,SKIP
! A list of actions to exclude from reporting
!DontReportActions = NewTest,GenerateReport,InitializeReport,SetVars
DontReportActions = InitializeReport
! A list of test step (DDTest instance) properties to include in test step report - used to control report verbosity on the test step level
! The list in its entirety is:
! status,action,locType,qryFunction,description,active,data,comments,errors,exceptionStack,exceptionCause,duration,events
! To be reported, property should be listed here and in TestItemReportTemplate
ReportElements = id,status,action,loctype,locspecs,qryfunction,description,active,data,comments,errors,exceptionStack,exceptionCause,duration,events,screenshotfilename,level
! Reporting template for test item (DDTest instance) - tokens are substituted by the corresponding contents (unused tokens removed)
! The first and last characters in the string are used as the open and close token delimiters.
! {id}{description}{action}{loctype}{locspecs}{qryfunction}{comments}
!TestItemReportTemplate = {id}{description}{action}{data}{comments}{screenshotfilename}
TestItemReportTemplate = {id}{description}{action}{data}
! User defined default comparison (Equals, Is, Contains, Matches, StartsWith, EndsWith, etc. - used when not specified on test item.
DefaultComparison = Equals
! Number of milliseconds to pause before a UI step - used to slow the DDTestRunner if needed
DefaultPause = 100
! The default date format (MM/dd/yyyy) - use to parse / compare a date or date output when the default is padded day and month (01/03/2014)
! Use M/d/yyyy when the default is un-padded day and month (1/1/2014)
DateFormat = MM/dd/yyyy
! The default time stamp format - use to set date or date output
TimeStampFormat = MM/dd/yyyy HH:mm:ss
! Indicates whether to tab out of data entry - this is needed on some web pages to trigger javascripts tied to leaving input fields
TabOut = true
! Indicate whether to trim white spaces when comparing / evaluating strings prior to comparison.
! This might be a more desired method of comparing strings as one does not have to worry about white space that may be invisible.
StripWhiteSpace = true
! Indicate reporting style.
! Default is the original style (xml that gets transformed to html), Html produces an active web page the user can interact with
ReportingStyle = Extent
